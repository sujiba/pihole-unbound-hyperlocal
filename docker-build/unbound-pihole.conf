server:
    # https://manpages.debian.org/bullseye/unbound/unbound.conf.5.en.html
    # 
    # If no logfile is specified, syslog is used
    logfile: "/var/log/unbound/unbound.log"
    verbosity: 0

    interface: 127.0.0.1
    port: 5335
    do-ip4: yes
    do-udp: yes
    do-tcp: yes

    # Maybe set to no if you don't have IPv6 connectivity
    do-ip6: yes

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip6: no

    # if given, user privileges are dropped (after binding port),          
    # and the given username is assumed. Default is user "unbound".        
    # If you give "" no privileges are dropped.                            
    username: "unbound" 

    # Use this only when you downloaded the list of primary root servers!
    # If you use the default dns-root-data package, unbound will find it automatically
    root-hints: "/etc/unbound/root.hints"
    
    # File with trusted keys for validation. Specify more than one file
    # with several entries, one file per entry.                     
    # Zone file format, with DS and DNSKEY entries.                 
    # Note this gets out of date, use auto-trust-anchor-file please.
    trust-anchor-file: "/usr/share/dnssec-root/trusted-key.key"

    # Trust glue only if it is within the server's authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: yes

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # IP fragmentation is unreliable on the Internet today, and can cause
    # transmission failures when large DNS messages are sent via UDP. Even
    # when fragmentation does work, it may not be secure; it is theoretically
    # possible to spoof parts of a fragmented DNS message, without easy
    # detection at the receiving end. Recently, there was an excellent study
    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)
    # in collaboration with NLnet Labs explored DNS using real world data from the
    # the RIPE Atlas probes and the researchers suggested different values for
    # IPv4 and IPv6 and in different scenarios. They advise that servers should
    # be configured to limit DNS messages sent over UDP to a size that will not
    # trigger fragmentation on typical network links. DNS servers can switch
    # from UDP to TCP when a DNS response is too big to fit in this limited
    # buffer size. This value has also been suggested in DNS Flag Day 2020.
    edns-buffer-size: 1232

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: yes

    # Fetch the DNSKEYs earlier in the validation process, when a DS record is encountered. 
    # This lowers the latency of requests. It does use a little more CPU.
    prefetch-key: yes

    # One thread should be sufficient, can be increased on beefy machines. 
    # In reality for most users running on small networks or on a single machine, 
    # it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    num-threads: 1

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    so-rcvbuf: 1m

    # increase cache size to utilize more RAM | msg * 2 = rrset
    msg-cache-size: 128m
    rrset-cache-size: 256m

    # Aggressive NSEC uses the DNSSEC NSEC chain to synthesize NXDOMAIN 
    # and other denials, using information from previous NXDOMAINs answers.
    # It helps to reduce the query rate towards targets that get a very high nonexistent name lookup rate.
    aggressive-nsec: yes

    # If enabled id.server and hostname.bind queries are refused.
    hide-identity: yes
    #If enabled version.server and version.bind queries are refused.
    hide-version: yes

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10